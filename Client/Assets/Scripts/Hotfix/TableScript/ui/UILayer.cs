
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.ui
{
public sealed partial class UILayer : Luban.BeanBase
{
    public UILayer(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["downMutex"].IsBoolean) { throw new SerializationException(); }  DownMutex = _buf["downMutex"]; }
        { if(!_buf["ignoreMutex"].IsBoolean) { throw new SerializationException(); }  IgnoreMutex = _buf["ignoreMutex"]; }
        { var __json0 = _buf["exclusiveLayers"]; if(!__json0.IsArray) { throw new SerializationException(); } ExclusiveLayers = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  ExclusiveLayers.Add(__v0); }   }
        { var __json0 = _buf["depthRange"]; if(!__json0.IsArray) { throw new SerializationException(); } DepthRange = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  DepthRange.Add(__v0); }   }
        { if(!_buf["desc"].IsString) { throw new SerializationException(); }  Desc = _buf["desc"]; }
    }

    public static UILayer DeserializeUILayer(JSONNode _buf)
    {
        return new ui.UILayer(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 向下互斥
    /// </summary>
    public readonly bool DownMutex;
    /// <summary>
    /// 本层忽略互斥
    /// </summary>
    public readonly bool IgnoreMutex;
    /// <summary>
    /// 与哪些层级互斥
    /// </summary>
    public readonly System.Collections.Generic.List<int> ExclusiveLayers;
    /// <summary>
    /// 层级深度范围
    /// </summary>
    public readonly System.Collections.Generic.List<int> DepthRange;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string Desc;
   
    public const int __ID__ = 829989315;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "downMutex:" + DownMutex + ","
        + "ignoreMutex:" + IgnoreMutex + ","
        + "exclusiveLayers:" + Luban.StringUtil.CollectionToString(ExclusiveLayers) + ","
        + "depthRange:" + Luban.StringUtil.CollectionToString(DepthRange) + ","
        + "desc:" + Desc + ","
        + "}";
    }
}

}



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class GameConst : Luban.BeanBase
{
    public GameConst(JSONNode _buf) 
    {
        { if(!_buf["x1"].IsNumber) { throw new SerializationException(); }  X1 = _buf["x1"]; }
        { if(!_buf["x2"].IsString) { throw new SerializationException(); }  X2 = _buf["x2"]; }
        { if(!_buf["x3"].IsNumber) { throw new SerializationException(); }  X3 = _buf["x3"]; }
        { var __json0 = _buf["x4"]; if(!__json0.IsArray) { throw new SerializationException(); } X4 = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  X4.Add(__v0); }   }
        { var __json0 = _buf["x5"]; if(!__json0.IsArray) { throw new SerializationException(); } X5 = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  X5.Add(__v0); }   }
        { var __json0 = _buf["x7"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; X7 = new string[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  X7[__index0++] = __v0; }   }
        { if(!_buf["x8"].IsNumber) { throw new SerializationException(); }  X8 = _buf["x8"]; }
    }

    public static GameConst DeserializeGameConst(JSONNode _buf)
    {
        return new GameConst(_buf);
    }

    /// <summary>
    /// 描述2
    /// </summary>
    public readonly int X1;
    /// <summary>
    /// 描述3
    /// </summary>
    public readonly string X2;
    /// <summary>
    /// 描述4
    /// </summary>
    public readonly float X3;
    /// <summary>
    /// 描述5
    /// </summary>
    public readonly System.Collections.Generic.List<int> X4;
    /// <summary>
    /// 描述6
    /// </summary>
    public readonly System.Collections.Generic.List<string> X5;
    /// <summary>
    /// 描述8
    /// </summary>
    public readonly string[] X7;
    /// <summary>
    /// 描述9
    /// </summary>
    public readonly long X8;
   
    public const int __ID__ = -1315847567;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "x1:" + X1 + ","
        + "x2:" + X2 + ","
        + "x3:" + X3 + ","
        + "x4:" + Luban.StringUtil.CollectionToString(X4) + ","
        + "x5:" + Luban.StringUtil.CollectionToString(X5) + ","
        + "x7:" + Luban.StringUtil.CollectionToString(X7) + ","
        + "x8:" + X8 + ","
        + "}";
    }
}

}



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;


import "errors"

type AiService struct {
    Id int32
    NodeName string
}

const TypeId_AiService = -472395057

func (*AiService) GetTypeId() int32 {
    return -472395057
}

func NewAiService(_buf map[string]interface{}) (interface{}, error) {
    var id string
    var _ok_ bool
    if id, _ok_ = _buf["$type"].(string) ; !_ok_ {
        return nil, errors.New("type id missing")
    }
    switch id {
        case "UeSetDefaultFocus": _v, err := NewAiUeSetDefaultFocus(_buf); if err != nil { return nil, errors.New("aiuesetdefaultfocus") } else { return _v, nil }
        case "ExecuteTimeStatistic": _v, err := NewAiExecuteTimeStatistic(_buf); if err != nil { return nil, errors.New("aiexecutetimestatistic") } else { return _v, nil }
        case "ChooseTarget": _v, err := NewAiChooseTarget(_buf); if err != nil { return nil, errors.New("aichoosetarget") } else { return _v, nil }
        case "KeepFaceTarget": _v, err := NewAiKeepFaceTarget(_buf); if err != nil { return nil, errors.New("aikeepfacetarget") } else { return _v, nil }
        case "GetOwnerPlayer": _v, err := NewAiGetOwnerPlayer(_buf); if err != nil { return nil, errors.New("aigetownerplayer") } else { return _v, nil }
        case "UpdateDailyBehaviorProps": _v, err := NewAiUpdateDailyBehaviorProps(_buf); if err != nil { return nil, errors.New("aiupdatedailybehaviorprops") } else { return _v, nil }
        default: return nil, errors.New("unknown type id")
    }
}



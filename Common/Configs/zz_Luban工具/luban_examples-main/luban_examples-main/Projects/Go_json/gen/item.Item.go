
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;


import "errors"

type ItemItem struct {
    Id int32
    Name string
    MajorType int32
    MinorType int32
    MaxPileNum int32
    Quality int32
    Icon string
    IconBackgroud string
    IconMask string
    Desc string
    ShowOrder int32
}

const TypeId_ItemItem = 2107285806

func (*ItemItem) GetTypeId() int32 {
    return 2107285806
}

func NewItemItem(_buf map[string]interface{}) (_v *ItemItem, err error) {
    _v = &ItemItem{}
    { var _ok_ bool; var __json_id__ interface{}; if __json_id__, _ok_ = _buf["id"]; !_ok_ || __json_id__ == nil { err = errors.New("id error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_id__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.Id = __x__ }}
    { var _ok_ bool; var __json_name__ interface{}; if __json_name__, _ok_ = _buf["name"]; !_ok_ || __json_name__ == nil { err = errors.New("name error"); return } else { var __x__ string;  {  if __x__, _ok_ = __json_name__.(string); !_ok_ { err = errors.New("__x__ error"); return } }; _v.Name = __x__ }}
    { var _ok_ bool; var __json_major_type__ interface{}; if __json_major_type__, _ok_ = _buf["major_type"]; !_ok_ || __json_major_type__ == nil { err = errors.New("major_type error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_major_type__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.MajorType = __x__ }}
    { var _ok_ bool; var __json_minor_type__ interface{}; if __json_minor_type__, _ok_ = _buf["minor_type"]; !_ok_ || __json_minor_type__ == nil { err = errors.New("minor_type error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_minor_type__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.MinorType = __x__ }}
    { var _ok_ bool; var __json_max_pile_num__ interface{}; if __json_max_pile_num__, _ok_ = _buf["max_pile_num"]; !_ok_ || __json_max_pile_num__ == nil { err = errors.New("max_pile_num error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_max_pile_num__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.MaxPileNum = __x__ }}
    { var _ok_ bool; var __json_quality__ interface{}; if __json_quality__, _ok_ = _buf["quality"]; !_ok_ || __json_quality__ == nil { err = errors.New("quality error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_quality__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.Quality = __x__ }}
    { var _ok_ bool; var __json_icon__ interface{}; if __json_icon__, _ok_ = _buf["icon"]; !_ok_ || __json_icon__ == nil { err = errors.New("icon error"); return } else { var __x__ string;  {  if __x__, _ok_ = __json_icon__.(string); !_ok_ { err = errors.New("__x__ error"); return } }; _v.Icon = __x__ }}
    { var _ok_ bool; var __json_icon_backgroud__ interface{}; if __json_icon_backgroud__, _ok_ = _buf["icon_backgroud"]; !_ok_ || __json_icon_backgroud__ == nil { err = errors.New("icon_backgroud error"); return } else { var __x__ string;  {  if __x__, _ok_ = __json_icon_backgroud__.(string); !_ok_ { err = errors.New("__x__ error"); return } }; _v.IconBackgroud = __x__ }}
    { var _ok_ bool; var __json_icon_mask__ interface{}; if __json_icon_mask__, _ok_ = _buf["icon_mask"]; !_ok_ || __json_icon_mask__ == nil { err = errors.New("icon_mask error"); return } else { var __x__ string;  {  if __x__, _ok_ = __json_icon_mask__.(string); !_ok_ { err = errors.New("__x__ error"); return } }; _v.IconMask = __x__ }}
    { var _ok_ bool; var __json_desc__ interface{}; if __json_desc__, _ok_ = _buf["desc"]; !_ok_ || __json_desc__ == nil { err = errors.New("desc error"); return } else { var __x__ string;  {  if __x__, _ok_ = __json_desc__.(string); !_ok_ { err = errors.New("__x__ error"); return } }; _v.Desc = __x__ }}
    { var _ok_ bool; var __json_show_order__ interface{}; if __json_show_order__, _ok_ = _buf["show_order"]; !_ok_ || __json_show_order__ == nil { err = errors.New("show_order error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_show_order__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.ShowOrder = __x__ }}
    return
}



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg.test;

import luban.*;


public final class TestSet extends AbstractBean {
    public TestSet(ByteBuf _buf) { 
        id = _buf.readInt();
        x0 = _buf.readString();
        {int __n0 = Math.min(_buf.readSize(), _buf.size());x1 = new java.util.ArrayList<Integer>(__n0);for(int __i0 = 0 ; __i0 < __n0 ; __i0++) { Integer __e0;  __e0 = _buf.readInt(); x1.add(__e0);}}
        {int __n0 = Math.min(_buf.readSize(), _buf.size());x2 = new java.util.ArrayList<Long>(__n0);for(int __i0 = 0 ; __i0 < __n0 ; __i0++) { Long __e0;  __e0 = _buf.readLong(); x2.add(__e0);}}
        {int __n0 = Math.min(_buf.readSize(), _buf.size());x3 = new java.util.ArrayList<String>(__n0);for(int __i0 = 0 ; __i0 < __n0 ; __i0++) { String __e0;  __e0 = _buf.readString(); x3.add(__e0);}}
        {int __n0 = Math.min(_buf.readSize(), _buf.size());x4 = new java.util.ArrayList<Integer>(__n0);for(int __i0 = 0 ; __i0 < __n0 ; __i0++) { Integer __e0;  __e0 = _buf.readInt(); x4.add(__e0);}}
    }

    public static TestSet deserialize(ByteBuf _buf) {
            return new cfg.test.TestSet(_buf);
    }

    public final int id;
    public final String x0;
    public final java.util.ArrayList<Integer> x1;
    public final java.util.ArrayList<Long> x2;
    public final java.util.ArrayList<String> x3;
    public final java.util.ArrayList<Integer> x4;

    public static final int __ID__ = -543221516;
    
    @Override
    public int getTypeId() { return __ID__; }

    @Override
    public String toString() {
        return "{ "
        + "id:" + id + ","
        + "x0:" + x0 + ","
        + "x1:" + x1 + ","
        + "x2:" + x2 + ","
        + "x3:" + x3 + ","
        + "x4:" + x4 + ","
        + "}";
    }
}


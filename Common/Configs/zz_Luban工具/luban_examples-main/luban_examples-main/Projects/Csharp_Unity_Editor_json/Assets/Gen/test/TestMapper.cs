
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;

namespace cfg.test
{

public sealed class TestMapper :  Luban.EditorBeanBase 
{
    public TestMapper()
    {
            audioType = AudioType.UNKNOWN;
            v2 = new vec2();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["audio_type"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { audioType = (AudioType)System.Enum.Parse(typeof(AudioType), _fieldJson); } else if(_fieldJson.IsNumber) { audioType = (AudioType)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
        }
        
        { 
            var _fieldJson = _json["v2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  v2 = vec2.LoadJsonvec2(_fieldJson);
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }
        {
            _json["audio_type"] = new JSONNumber((int)audioType);
        }
        {
            { var __bjson0 = new JSONObject(); _json["v2"] = __bjson0; vec2.SaveJsonvec2(v2, __bjson0); }
        }
    }

    public static TestMapper LoadJsonTestMapper(SimpleJSON.JSONNode _json)
    {
        TestMapper obj = new test.TestMapper();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonTestMapper(TestMapper _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int id;

    public AudioType audioType;

    public vec2 v2;

}

}


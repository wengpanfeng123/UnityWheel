
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;

namespace cfg.test
{

public sealed class TestString :  Luban.EditorBeanBase 
{
    public TestString()
    {
            id = "";
            s1 = "";
            s2 = "";
            cs1 = new test.CompactString();
            cs2 = new test.CompactString();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["s1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  s1 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["s2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  s2 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["cs1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  cs1 = test.CompactString.LoadJsonCompactString(_fieldJson);
            }
        }
        
        { 
            var _fieldJson = _json["cs2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  cs2 = test.CompactString.LoadJsonCompactString(_fieldJson);
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {

            if (id == null) { throw new System.ArgumentNullException(); }
            _json["id"] = new JSONString(id);
        }
        {

            if (s1 == null) { throw new System.ArgumentNullException(); }
            _json["s1"] = new JSONString(s1);
        }
        {

            if (s2 == null) { throw new System.ArgumentNullException(); }
            _json["s2"] = new JSONString(s2);
        }
        {

            if (cs1 == null) { throw new System.ArgumentNullException(); }
            { var __bjson0 = new JSONObject(); _json["cs1"] = __bjson0; test.CompactString.SaveJsonCompactString(cs1, __bjson0); }
        }
        {

            if (cs2 == null) { throw new System.ArgumentNullException(); }
            { var __bjson0 = new JSONObject(); _json["cs2"] = __bjson0; test.CompactString.SaveJsonCompactString(cs2, __bjson0); }
        }
    }

    public static TestString LoadJsonTestString(SimpleJSON.JSONNode _json)
    {
        TestString obj = new test.TestString();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonTestString(TestString _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public string id;

    public string s1;

    public string s2;

    public test.CompactString cs1;

    public test.CompactString cs2;

}

}


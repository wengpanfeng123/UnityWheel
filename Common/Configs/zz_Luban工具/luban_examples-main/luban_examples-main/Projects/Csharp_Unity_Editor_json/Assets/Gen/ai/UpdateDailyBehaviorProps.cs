
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;

namespace cfg.ai
{

public sealed class UpdateDailyBehaviorProps :  ai.Service 
{
    public UpdateDailyBehaviorProps()
    {
            satietyKey = "";
            energyKey = "";
            moodKey = "";
            satietyLowerThresholdKey = "";
            satietyUpperThresholdKey = "";
            energyLowerThresholdKey = "";
            energyUpperThresholdKey = "";
            moodLowerThresholdKey = "";
            moodUpperThresholdKey = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["node_name"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  nodeName = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["satiety_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  satietyKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["energy_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  energyKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["mood_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  moodKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["satiety_lower_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  satietyLowerThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["satiety_upper_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  satietyUpperThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["energy_lower_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  energyLowerThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["energy_upper_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  energyUpperThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["mood_lower_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  moodLowerThresholdKey = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["mood_upper_threshold_key"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  moodUpperThresholdKey = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }
        {

            if (nodeName == null) { throw new System.ArgumentNullException(); }
            _json["node_name"] = new JSONString(nodeName);
        }
        {

            if (satietyKey == null) { throw new System.ArgumentNullException(); }
            _json["satiety_key"] = new JSONString(satietyKey);
        }
        {

            if (energyKey == null) { throw new System.ArgumentNullException(); }
            _json["energy_key"] = new JSONString(energyKey);
        }
        {

            if (moodKey == null) { throw new System.ArgumentNullException(); }
            _json["mood_key"] = new JSONString(moodKey);
        }
        {

            if (satietyLowerThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["satiety_lower_threshold_key"] = new JSONString(satietyLowerThresholdKey);
        }
        {

            if (satietyUpperThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["satiety_upper_threshold_key"] = new JSONString(satietyUpperThresholdKey);
        }
        {

            if (energyLowerThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["energy_lower_threshold_key"] = new JSONString(energyLowerThresholdKey);
        }
        {

            if (energyUpperThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["energy_upper_threshold_key"] = new JSONString(energyUpperThresholdKey);
        }
        {

            if (moodLowerThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["mood_lower_threshold_key"] = new JSONString(moodLowerThresholdKey);
        }
        {

            if (moodUpperThresholdKey == null) { throw new System.ArgumentNullException(); }
            _json["mood_upper_threshold_key"] = new JSONString(moodUpperThresholdKey);
        }
    }

    public static UpdateDailyBehaviorProps LoadJsonUpdateDailyBehaviorProps(SimpleJSON.JSONNode _json)
    {
        UpdateDailyBehaviorProps obj = new ai.UpdateDailyBehaviorProps();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonUpdateDailyBehaviorProps(UpdateDailyBehaviorProps _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public string satietyKey;

    public string energyKey;

    public string moodKey;

    public string satietyLowerThresholdKey;

    public string satietyUpperThresholdKey;

    public string energyLowerThresholdKey;

    public string energyUpperThresholdKey;

    public string moodLowerThresholdKey;

    public string moodUpperThresholdKey;

}

}


// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace cfg
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TestDemoPrimitiveTypesTable : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static TestDemoPrimitiveTypesTable GetRootAsTestDemoPrimitiveTypesTable(ByteBuffer _bb) { return GetRootAsTestDemoPrimitiveTypesTable(_bb, new TestDemoPrimitiveTypesTable()); }
  public static TestDemoPrimitiveTypesTable GetRootAsTestDemoPrimitiveTypesTable(ByteBuffer _bb, TestDemoPrimitiveTypesTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TestDemoPrimitiveTypesTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool X1 { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public byte X2 { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public short X3 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public int X4 { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long X5 { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public float X6 { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public double X7 { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public string S1 { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetS1Bytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetS1Bytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetS1Array() { return __p.__vector_as_array<byte>(18); }
  public string S2 { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetS2Bytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetS2Bytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetS2Array() { return __p.__vector_as_array<byte>(20); }
  public cfg.vector2? V2 { get { int o = __p.__offset(22); return o != 0 ? (cfg.vector2?)(new cfg.vector2()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public cfg.vector3? V3 { get { int o = __p.__offset(24); return o != 0 ? (cfg.vector3?)(new cfg.vector3()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public cfg.vector4? V4 { get { int o = __p.__offset(26); return o != 0 ? (cfg.vector4?)(new cfg.vector4()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public long T1 { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<cfg.TestDemoPrimitiveTypesTable> CreateTestDemoPrimitiveTypesTable(FlatBufferBuilder builder,
      bool x1 = false,
      byte x2 = 0,
      short x3 = 0,
      int x4 = 0,
      long x5 = 0,
      float x6 = 0.0f,
      double x7 = 0.0,
      StringOffset s1Offset = default(StringOffset),
      StringOffset s2Offset = default(StringOffset),
      Offset<cfg.vector2> v2Offset = default(Offset<cfg.vector2>),
      Offset<cfg.vector3> v3Offset = default(Offset<cfg.vector3>),
      Offset<cfg.vector4> v4Offset = default(Offset<cfg.vector4>),
      long t1 = 0) {
    builder.StartTable(13);
    TestDemoPrimitiveTypesTable.AddT1(builder, t1);
    TestDemoPrimitiveTypesTable.AddX7(builder, x7);
    TestDemoPrimitiveTypesTable.AddX5(builder, x5);
    TestDemoPrimitiveTypesTable.AddV4(builder, v4Offset);
    TestDemoPrimitiveTypesTable.AddV3(builder, v3Offset);
    TestDemoPrimitiveTypesTable.AddV2(builder, v2Offset);
    TestDemoPrimitiveTypesTable.AddS2(builder, s2Offset);
    TestDemoPrimitiveTypesTable.AddS1(builder, s1Offset);
    TestDemoPrimitiveTypesTable.AddX6(builder, x6);
    TestDemoPrimitiveTypesTable.AddX4(builder, x4);
    TestDemoPrimitiveTypesTable.AddX3(builder, x3);
    TestDemoPrimitiveTypesTable.AddX2(builder, x2);
    TestDemoPrimitiveTypesTable.AddX1(builder, x1);
    return TestDemoPrimitiveTypesTable.EndTestDemoPrimitiveTypesTable(builder);
  }

  public static void StartTestDemoPrimitiveTypesTable(FlatBufferBuilder builder) { builder.StartTable(13); }
  public static void AddX1(FlatBufferBuilder builder, bool x1) { builder.AddBool(0, x1, false); }
  public static void AddX2(FlatBufferBuilder builder, byte x2) { builder.AddByte(1, x2, 0); }
  public static void AddX3(FlatBufferBuilder builder, short x3) { builder.AddShort(2, x3, 0); }
  public static void AddX4(FlatBufferBuilder builder, int x4) { builder.AddInt(3, x4, 0); }
  public static void AddX5(FlatBufferBuilder builder, long x5) { builder.AddLong(4, x5, 0); }
  public static void AddX6(FlatBufferBuilder builder, float x6) { builder.AddFloat(5, x6, 0.0f); }
  public static void AddX7(FlatBufferBuilder builder, double x7) { builder.AddDouble(6, x7, 0.0); }
  public static void AddS1(FlatBufferBuilder builder, StringOffset s1Offset) { builder.AddOffset(7, s1Offset.Value, 0); }
  public static void AddS2(FlatBufferBuilder builder, StringOffset s2Offset) { builder.AddOffset(8, s2Offset.Value, 0); }
  public static void AddV2(FlatBufferBuilder builder, Offset<cfg.vector2> v2Offset) { builder.AddOffset(9, v2Offset.Value, 0); }
  public static void AddV3(FlatBufferBuilder builder, Offset<cfg.vector3> v3Offset) { builder.AddOffset(10, v3Offset.Value, 0); }
  public static void AddV4(FlatBufferBuilder builder, Offset<cfg.vector4> v4Offset) { builder.AddOffset(11, v4Offset.Value, 0); }
  public static void AddT1(FlatBufferBuilder builder, long t1) { builder.AddLong(12, t1, 0); }
  public static Offset<cfg.TestDemoPrimitiveTypesTable> EndTestDemoPrimitiveTypesTable(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 22);  // v2
    builder.Required(o, 24);  // v3
    builder.Required(o, 26);  // v4
    return new Offset<cfg.TestDemoPrimitiveTypesTable>(o);
  }
}


static public class TestDemoPrimitiveTypesTableVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*X1*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*X2*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*X3*/, 2 /*short*/, 2, false)
      && verifier.VerifyField(tablePos, 10 /*X4*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*X5*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 14 /*X6*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*X7*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 18 /*S1*/, false)
      && verifier.VerifyString(tablePos, 20 /*S2*/, false)
      && verifier.VerifyTable(tablePos, 22 /*V2*/, cfg.vector2Verify.Verify, true)
      && verifier.VerifyTable(tablePos, 24 /*V3*/, cfg.vector3Verify.Verify, true)
      && verifier.VerifyTable(tablePos, 26 /*V4*/, cfg.vector4Verify.Verify, true)
      && verifier.VerifyField(tablePos, 28 /*T1*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}

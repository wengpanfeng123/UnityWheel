// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace cfg
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TestFoo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static TestFoo GetRootAsTestFoo(ByteBuffer _bb) { return GetRootAsTestFoo(_bb, new TestFoo()); }
  public static TestFoo GetRootAsTestFoo(ByteBuffer _bb, TestFoo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TestFoo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Y1 { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Y2 { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Y3 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<cfg.TestFoo> CreateTestFoo(FlatBufferBuilder builder,
      int y1 = 0,
      int y2 = 0,
      int y3 = 0) {
    builder.StartTable(3);
    TestFoo.AddY3(builder, y3);
    TestFoo.AddY2(builder, y2);
    TestFoo.AddY1(builder, y1);
    return TestFoo.EndTestFoo(builder);
  }

  public static void StartTestFoo(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddY1(FlatBufferBuilder builder, int y1) { builder.AddInt(0, y1, 0); }
  public static void AddY2(FlatBufferBuilder builder, int y2) { builder.AddInt(1, y2, 0); }
  public static void AddY3(FlatBufferBuilder builder, int y3) { builder.AddInt(2, y3, 0); }
  public static Offset<cfg.TestFoo> EndTestFoo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<cfg.TestFoo>(o);
  }
}


static public class TestFooVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Y1*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Y2*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Y3*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}

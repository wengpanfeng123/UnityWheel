
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.test
{
public sealed partial class TestRange : Luban.BeanBase
{
    public TestRange(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        F1 = _buf.ReadFloat();
        F2 = _buf.ReadFloat();
        D1 = _buf.ReadDouble();
        D2 = _buf.ReadDouble();
        I1 = _buf.ReadInt();
        I2 = _buf.ReadInt();
        I3 = _buf.ReadInt();
        I4 = _buf.ReadInt();
        L1 = _buf.ReadLong();
        L2 = _buf.ReadLong();
        L3 = _buf.ReadLong();
        L4 = _buf.ReadLong();
    }

    public static TestRange DeserializeTestRange(ByteBuf _buf)
    {
        return new test.TestRange(_buf);
    }

    public readonly int Id;
    public readonly float F1;
    public readonly float F2;
    public readonly double D1;
    public readonly double D2;
    public readonly int I1;
    public readonly int I2;
    public readonly int I3;
    public readonly int I4;
    public readonly long L1;
    public readonly long L2;
    public readonly long L3;
    public readonly long L4;
   
    public const int __ID__ = 1949088079;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "f1:" + F1 + ","
        + "f2:" + F2 + ","
        + "d1:" + D1 + ","
        + "d2:" + D2 + ","
        + "i1:" + I1 + ","
        + "i2:" + I2 + ","
        + "i3:" + I3 + ","
        + "i4:" + I4 + ","
        + "l1:" + L1 + ","
        + "l2:" + L2 + ","
        + "l3:" + L3 + ","
        + "l4:" + L4 + ","
        + "}";
    }
}

}



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.test
{
public sealed partial class ExcelFromJsonMultiRow : Luban.BeanBase
{
    public ExcelFromJsonMultiRow(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["x"].IsNumber) { throw new SerializationException(); }  X = _buf["x"]; }
        { var __json0 = _buf["items"]; if(!__json0.IsArray) { throw new SerializationException(); } Items = new System.Collections.Generic.List<test.TestRow>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { test.TestRow __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = test.TestRow.DeserializeTestRow(__e0);  }  Items.Add(__v0); }   }
    }

    public static ExcelFromJsonMultiRow DeserializeExcelFromJsonMultiRow(JSONNode _buf)
    {
        return new test.ExcelFromJsonMultiRow(_buf);
    }

    public readonly int Id;
    public readonly int X;
    public readonly System.Collections.Generic.List<test.TestRow> Items;
   
    public const int __ID__ = 715335694;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        foreach (var _e in Items) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "x:" + X + ","
        + "items:" + Luban.StringUtil.CollectionToString(Items) + ","
        + "}";
    }
}

}

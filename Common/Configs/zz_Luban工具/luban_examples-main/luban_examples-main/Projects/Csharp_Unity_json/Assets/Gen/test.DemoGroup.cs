
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.test
{
public sealed partial class DemoGroup : Luban.BeanBase
{
    public DemoGroup(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["x1"].IsNumber) { throw new SerializationException(); }  X1 = _buf["x1"]; }
        X1_Ref = null;
        { if(!_buf["x4"].IsNumber) { throw new SerializationException(); }  X4 = _buf["x4"]; }
        { if(!_buf["x5"].IsObject) { throw new SerializationException(); }  X5 = test.InnerGroup.DeserializeInnerGroup(_buf["x5"]);  }
    }

    public static DemoGroup DeserializeDemoGroup(JSONNode _buf)
    {
        return new test.DemoGroup(_buf);
    }

    public readonly int Id;
    public readonly int X1;
    public test.DemoGroup X1_Ref;
    public readonly int X4;
    public readonly test.InnerGroup X5;
   
    public const int __ID__ = -379263008;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        X1_Ref = tables.TbDemoGroupC.GetOrDefault(X1);
        
        X5?.ResolveRef(tables);
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "x1:" + X1 + ","
        + "x4:" + X4 + ","
        + "x5:" + X5 + ","
        + "}";
    }
}

}

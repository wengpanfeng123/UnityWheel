
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.test
{
public sealed partial class TestMultiColumn : Luban.BeanBase
{
    public TestMultiColumn(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["a"].IsObject) { throw new SerializationException(); }  A = test.Foo.DeserializeFoo(_buf["a"]);  }
        { if(!_buf["b"].IsObject) { throw new SerializationException(); }  B = test.Foo.DeserializeFoo(_buf["b"]);  }
        { if(!_buf["c"].IsObject) { throw new SerializationException(); }  C = test.Foo.DeserializeFoo(_buf["c"]);  }
    }

    public static TestMultiColumn DeserializeTestMultiColumn(JSONNode _buf)
    {
        return new test.TestMultiColumn(_buf);
    }

    public readonly int Id;
    public readonly test.Foo A;
    public readonly test.Foo B;
    public readonly test.Foo C;
   
    public const int __ID__ = -294473599;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        A?.ResolveRef(tables);
        B?.ResolveRef(tables);
        C?.ResolveRef(tables);
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "a:" + A + ","
        + "b:" + B + ","
        + "c:" + C + ","
        + "}";
    }
}

}

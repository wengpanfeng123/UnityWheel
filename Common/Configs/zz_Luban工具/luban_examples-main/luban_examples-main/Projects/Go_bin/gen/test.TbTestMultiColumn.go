
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;


import "demo/luban"

type TestTbTestMultiColumn struct {
    _dataMap map[int32]*TestTestMultiColumn
    _dataList []*TestTestMultiColumn
}

func NewTestTbTestMultiColumn(_buf *luban.ByteBuf) (*TestTbTestMultiColumn, error) {
	if size, err := _buf.ReadSize() ; err != nil {
		return nil, err
	} else {
		_dataList := make([]*TestTestMultiColumn, 0, size)
		dataMap := make(map[int32]*TestTestMultiColumn)

		for i := 0 ; i < size ; i++ {
			if _v, err2 := NewTestTestMultiColumn(_buf); err2 != nil {
				return nil, err2
			} else {
				_dataList = append(_dataList, _v)
				dataMap[_v.Id] = _v
			}
		}
		return &TestTbTestMultiColumn{_dataList:_dataList, _dataMap:dataMap}, nil
	}
}

func (table *TestTbTestMultiColumn) GetDataMap() map[int32]*TestTestMultiColumn {
    return table._dataMap
}

func (table *TestTbTestMultiColumn) GetDataList() []*TestTestMultiColumn {
    return table._dataList
}

func (table *TestTbTestMultiColumn) Get(key int32) *TestTestMultiColumn {
    return table._dataMap[key]
}



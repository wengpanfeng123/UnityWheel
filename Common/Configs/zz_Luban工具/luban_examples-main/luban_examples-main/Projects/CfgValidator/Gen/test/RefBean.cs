
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using System.Text.Json;


namespace cfg.test
{
public sealed partial class RefBean : test.RefDynamicBase
{
    public RefBean(JsonElement _buf)  : base(_buf) 
    {
        { var __json0 = _buf.GetProperty("arr"); Arr = new System.Collections.Generic.List<int>(__json0.GetArrayLength()); foreach(JsonElement __e0 in __json0.EnumerateArray()) { int __v0;  __v0 = __e0.GetInt32();  Arr.Add(__v0); }   }
    }

    public static RefBean DeserializeRefBean(JsonElement _buf)
    {
        return new test.RefBean(_buf);
    }

    public readonly System.Collections.Generic.List<int> Arr;
    public System.Collections.Generic.List<test.TestBeRef> Arr_Ref;
   
    public const int __ID__ = 1963260263;
    public override int GetTypeId() => __ID__;

    public override void ResolveRef(Tables tables)
    {
        base.ResolveRef(tables);
        Arr_Ref = new System.Collections.Generic.List<test.TestBeRef>();
        foreach (var _v in Arr) { Arr_Ref.Add(tables.TbTestBeRef.GetOrDefault(_v)); }

    }

    public override string ToString()
    {
        return "{ "
        + "x:" + X + ","
        + "arr:" + Luban.StringUtil.CollectionToString(Arr) + ","
        + "}";
    }
}

}


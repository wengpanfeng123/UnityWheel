
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg.test;

import luban.*;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;


public final class TestNull extends AbstractBean {
    public TestNull(JsonObject _buf) { 
        id = _buf.get("id").getAsInt();
        { if (_buf.has("x1") && !_buf.get("x1").isJsonNull()) { x1 = _buf.get("x1").getAsInt(); } else { x1 = null; } }
        { if (_buf.has("x2") && !_buf.get("x2").isJsonNull()) { x2 = _buf.get("x2").getAsInt(); } else { x2 = null; } }
        { if (_buf.has("x3") && !_buf.get("x3").isJsonNull()) { x3 = cfg.test.DemoType1.deserialize(_buf.get("x3").getAsJsonObject()); } else { x3 = null; } }
        { if (_buf.has("x4") && !_buf.get("x4").isJsonNull()) { x4 = cfg.test.DemoDynamic.deserialize(_buf.get("x4").getAsJsonObject()); } else { x4 = null; } }
        { if (_buf.has("s1") && !_buf.get("s1").isJsonNull()) { s1 = _buf.get("s1").getAsString(); } else { s1 = null; } }
        { if (_buf.has("s2") && !_buf.get("s2").isJsonNull()) { s2 = _buf.get("s2").getAsString(); } else { s2 = null; } }
    }

    public static TestNull deserialize(JsonObject _buf) {
            return new cfg.test.TestNull(_buf);
    }

    public final int id;
    public final Integer x1;
    public final Integer x2;
    public final cfg.test.DemoType1 x3;
    public final cfg.test.DemoDynamic x4;
    public final String s1;
    public final String s2;

    public static final int __ID__ = 339868469;
    
    @Override
    public int getTypeId() { return __ID__; }

    @Override
    public String toString() {
        return "{ "
        + "id:" + id + ","
        + "x1:" + x1 + ","
        + "x2:" + x2 + ","
        + "x3:" + x3 + ","
        + "x4:" + x4 + ","
        + "s1:" + s1 + ","
        + "s2:" + s2 + ","
        + "}";
    }
}


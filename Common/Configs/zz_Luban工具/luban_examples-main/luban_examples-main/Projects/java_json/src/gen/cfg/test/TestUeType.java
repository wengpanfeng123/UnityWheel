
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg.test;

import luban.*;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;


public final class TestUeType extends AbstractBean {
    public TestUeType(JsonObject _buf) { 
        x1 = _buf.get("x1").getAsBoolean();
        x2 = _buf.get("x2").getAsByte();
        x3 = _buf.get("x3").getAsShort();
        x4 = _buf.get("x4").getAsInt();
        x5 = _buf.get("x5").getAsLong();
        x6 = _buf.get("x6").getAsFloat();
        x10 = _buf.get("x10").getAsString();
        x12 = cfg.test.DemoType1.deserialize(_buf.get("x12").getAsJsonObject());
        x13 = _buf.get("x13").getAsInt();
        t1 = _buf.get("t1").getAsLong();
        { com.google.gson.JsonArray _json0_ = _buf.get("k1").getAsJsonArray(); int __n0 = _json0_.size(); k1 = new int[__n0]; int __index0=0; for(JsonElement __e0 : _json0_) { int __v0;  __v0 = __e0.getAsInt();  k1[__index0++] = __v0; }   }
        { com.google.gson.JsonArray _json0_ = _buf.get("k2").getAsJsonArray(); k2 = new java.util.ArrayList<Integer>(_json0_.size()); for(JsonElement _e0 : _json0_) { int _v0;  _v0 = _e0.getAsInt();  k2.add(_v0); }   }
        { com.google.gson.JsonArray _json0_ = _buf.get("k5").getAsJsonArray(); k5 = new java.util.HashSet<Integer>(_json0_.size()); for(JsonElement _e0 : _json0_) { int _v0;  _v0 = _e0.getAsInt();  k5.add(_v0); }   }
        { com.google.gson.JsonArray _json0_ = _buf.get("k8").getAsJsonArray(); k8 = new java.util.HashMap<Integer, Integer>(_json0_.size()); for(JsonElement _e0 : _json0_) { int _k0;  _k0 = _e0.getAsJsonArray().get(0).getAsInt(); int _v0;  _v0 = _e0.getAsJsonArray().get(1).getAsInt();  k8.put(_k0, _v0); }   }
        { com.google.gson.JsonArray _json0_ = _buf.get("k9").getAsJsonArray(); k9 = new java.util.ArrayList<cfg.test.DemoE2>(_json0_.size()); for(JsonElement _e0 : _json0_) { cfg.test.DemoE2 _v0;  _v0 = cfg.test.DemoE2.deserialize(_e0.getAsJsonObject());  k9.add(_v0); }   }
    }

    public static TestUeType deserialize(JsonObject _buf) {
            return new cfg.test.TestUeType(_buf);
    }

    public final boolean x1;
    public final byte x2;
    public final short x3;
    public final int x4;
    public final long x5;
    public final float x6;
    public final String x10;
    public final cfg.test.DemoType1 x12;
    public final int x13;
    public final long t1;
    public final int[] k1;
    public final java.util.ArrayList<Integer> k2;
    public final java.util.HashSet<Integer> k5;
    public final java.util.HashMap<Integer, Integer> k8;
    public final java.util.ArrayList<cfg.test.DemoE2> k9;

    public static final int __ID__ = 381013016;
    
    @Override
    public int getTypeId() { return __ID__; }

    @Override
    public String toString() {
        return "{ "
        + "x1:" + x1 + ","
        + "x2:" + x2 + ","
        + "x3:" + x3 + ","
        + "x4:" + x4 + ","
        + "x5:" + x5 + ","
        + "x6:" + x6 + ","
        + "x10:" + x10 + ","
        + "x12:" + x12 + ","
        + "x13:" + x13 + ","
        + "t1:" + t1 + ","
        + "k1:" + k1 + ","
        + "k2:" + k2 + ","
        + "k5:" + k5 + ","
        + "k8:" + k8 + ","
        + "k9:" + k9 + ","
        + "}";
    }
}

